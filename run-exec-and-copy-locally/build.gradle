import de.gesellix.util.IOUtils
import de.gesellix.gradle.docker.tasks.*

task stopContainer(type: DockerStopTask) {
  containerId = "exec-example"
}

task rmContainer(type: DockerRmTask) {
  dependsOn stopContainer
  containerId = "exec-example"
}

task runContainer(type: DockerRunTask) {
  dependsOn rmContainer
  imageName = "alpine:edge"
  containerName = "exec-example"
  containerConfiguration = [Cmd: ["ping", "127.0.0.1"]]
}

task execInContainer(type: DockerExecTask) {
  dependsOn runContainer

  containerId = "exec-example"
  commandLine = 'echo "hallo" > /test.txt && cat /test.txt'

  doLast {
    logger.info("${IOUtils.copy(result.stream, System.out)}")
  }
}

task downloadArchiveFromContainer(type: DockerCopyFromContainerTask) {
  dependsOn execInContainer

  container = "exec-example"
  sourcePath = "/test.txt"
}

task extractSingleFile(type: DockerTask) {
  dependsOn downloadArchiveFromContainer

  doLast {
    def fileContent = getDockerClient().extractSingleTarEntry(downloadArchiveFromContainer.content.stream as InputStream, "test.txt")
    buildDir.mkdirs()
    def outputStream = new FileOutputStream("${buildDir}/test.txt")
    IOUtils.write(fileContent as byte[], outputStream)
    IOUtils.closeQuietly(outputStream)
  }
}

task stopContainerAfterExec(type: DockerStopTask) {
  containerId = "exec-example"
}
downloadArchiveFromContainer.finalizedBy stopContainerAfterExec
